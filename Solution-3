#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>

#define max 1000
using namespace std;



void dfs(int grid[][max], int i, int j)
{
    int m = 3;
    int n = 4;
    if (i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == 0)
    {
        return;
    }

    grid[i][j] = 0;
    // Check neighboring cells vertically and horizontally (excluding diagonals)
    dfs(grid, i - 1, j);
    dfs(grid, i + 1, j);
    dfs(grid, i, j - 1);
    dfs(grid, i, j + 1);
}

int countStars(int grid[][max])
{
    int m = 3;
    int n = 4;
    int count = 0;

    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (grid[i][j] == 1)
            {
                count++;
                dfs(grid, i, j);
            }
        }
    }
    return count;
}

int main() {
    int M, N;
    cin >> M;
    cin >> N;
    int grid[max][max];
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            cin >> grid[i][j];
        }
    }
    cout << countStars(grid);
    return 0;
}
