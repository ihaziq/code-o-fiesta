Stockfish is arguably the strongest chess engine. It uses probabilistic measures to suggest the best move. However, something's wrong. 
The engine, due to a bug, is suggesting moves which lie outside of the chessboard. An engineer tasked with solving this problem has to calculate 
the probability that a certain piece remains on the board after it takes exactly K steps. The piece in question is a Knight. You are given the 
columns in the chessboard (N) and a black Knight at position [x, y]. At each step the engine chooses the next move of the knight from any of the 
8 directions uniformly at random. Find the probability that the Knight remains on the chessboard after taking exactly K steps. (Knight cannot enter 
the board again once it leaves it.)

The main() function is:

int main() {
    int N, X, Y, K;
    cin >> N;
    cin >> X;
    cin >> Y;
    cin >> K;
    return 0;
}
Input Format

N (the columns in a chessboard)
x coordinate of knight (0-based)
y coordinate of knight (0-based)
Steps (K)
Constraints

1 <= N <= 100
0 <= x, y <= N
0 <= K <= N

